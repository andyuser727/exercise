<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/jee
    http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <context:annotation-config/>

    <context:component-scan base-package="exercise"/>

    <tx:annotation-driven proxy-target-class="true"/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>    

    <tx:annotation-driven/>

    
    <!-- JNDI Lookup to access dataSource and tx manager - see META-INF/context.xml and WEB-INF/web.xml -->
    <jee:jndi-lookup id="dataSource" jndi-name="jdbc/H2" expected-type="javax.sql.DataSource"/>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
            <list>
                <value>exercise.domain.Contact</value>
            </list>
        </property>
        <property name="configLocations" ref="hibernateCfgLocations"/>

        <property name="hibernateProperties">
            <props>
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>-->
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>-->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
		</props>
        </property>
    </bean>

    <util:list id="hibernateCfgLocations">
        <value>classpath:hibernate-config.cfg.xml</value>
    </util:list>

    <!-- Maps the request through to a concrete controller instance -->
    <bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <value>
                /**/app.rpc=appController
            </value>
        </property>
    </bean>

    <!-- GwtRpcController wraps our service in customerOrder to decode the incoming -->
    <!-- request then delegates processing of the call to the POJO service -->
    <!-- and then encodes the return value forwarding the response. -->
    <bean id="appController" class="exercise.controller.GwtRpcController">
        <property name="remoteService">
            <bean class="exercise.service.AppServiceImpl"/>
        </property>
    </bean>

</beans>